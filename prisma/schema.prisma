// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  name      String
  documents Document[]
  quizzes   Quiz[]
  scores    Score[]
  createdAt DateTime   @default(now())
}

model Document {
  id        String   @id @default(uuid())
  userId    String // User ID (required)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  title     String
  content   String
  createdAt DateTime @default(now())
  quizzes   Quiz[]
}

model Quiz {
  id         String     @id @default(uuid())
  userId     String // User ID (required)
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  documentId String
  document   Document   @relation(fields: [documentId], references: [id], onDelete: Cascade)
  questions  Question[]
  createdAt  DateTime   @default(now())
  Score      Score[]
}

model Question {
  id        String   @id @default(uuid())
  quizId    String
  quiz      Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
  text      String
  options   String[]
  answer    String
  createdAt DateTime @default(now())
}

model Score {
  id        String   @id @default(uuid())
  userId    String // User ID (required)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  quizId    String
  quiz      Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
  score     Int
  createdAt DateTime @default(now())
}
